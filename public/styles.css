/**
    Classes that start with uppercase are component classes
    Classes that start with lowercase are component modifiers

    This CSS styles are written in a functional/atomic architecture of CSS:
    https://www.smashingmagazine.com/2013/10/challenging-css-best-practices-atomic-approach/

    The purpose of this approach to CSS is to have stylesheets that are
    predictable, reusable, maintainable, and scalable.
*/
* { 
    padding: 0;
    margin: 0;
    position: relative;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

/**
 Sizes
*/
.width100
{
    width: calc(100vw - 2em);
    max-height: 100vw;
    padding: 1em;
}

.width75
{
    width: 75vw;
    max-height: 90vh;
}

.width50
{
    width: 50vw;
    max-width: 90vh;
}

.width25
{
    width: 25vw;
}

.height5
{
    height: 5vh;
}

/**
 Decorations
*/
.borderBottomGrey
{
    border-bottom: 1px solid #121312cc;
}
.borderRight
{
    border-right: 5px solid #0085f0;
}
.padding
{
    padding: 1em;
}

/**
 Lists
*/
.List
{
    list-style: none;
}
.List li
{
    padding: 1em;
}

/**
 Actions
*/
.disabled
{
    opacity: 0.7;
}

/**
 Hoverables
*/
.hoverBlackLight:hover
{
    background-color: #333232;
}
.hoverWhiteGrey:hover
{
    background-color: #cecccc;
}

/**
 Backgrounds
*/
.bgBlack
{
    background-color: #121312;
}
.bgBlack75
{
    background-color: #121312cc;
}
.bgBlackLight
{
    background-color: #333232;
}
.bgWhite
{
    background-color: #ffffff;
}
.bgWhiteGrey
{
    background-color: #cecccc;
}

.shadowBlack
{
    box-shadow: 0.5em 0.5em 0 #121312;
}

/**
 Texts
*/
.textBlack
{
    color: #121312;
}
.textBlackLight
{
    color: #333232;
}
.textWhite
{
    color: #ffffff;
}
.textWhiteGrey
{
    color: #cecccc;
}
.textGreen
{
    color: #0fcf0f;
}
.textBlue
{
    color: #0085f0;
}

/**
 Positionables
*/
.posLeft
{
    float: left;
}
.posRight
{
    float: right;
}
.floatingBottom
{
    position: fixed;
    bottom: 0;
}
.centerVertical
{
    vertical-align: middle;
}

/**
 Forms
*/
.Form
{
    width: 100%;
    display: flex;
}

.Input
{
    padding: 1em;
    border: 0;
    box-shadow: none;
}
.Input.Text
{
    width: 80%;
    display: flow-root;
}
.Input.Submit
{
    width: 20%;
    display: flow-root;
}

.Window
{
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    padding: 1em;
}

.Screen
{
    position: fixed;
    left: 0;
    top: 0;
}

.screenContent75
{
    width: calc(100vw - 25vw);
    height: calc(100vh - 5vh);
    padding: 2.5vh 12.5vw;
}

.screenTitle
{
    position: fixed;
    left: 12.5vw;
    bottom: 1vh;
}

.scrollVertical
{
    overflow-y: scroll;
}
